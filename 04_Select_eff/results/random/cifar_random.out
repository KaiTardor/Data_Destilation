/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
---------------------------------------------------------------------------
Ejecutando: cifar_10pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 4000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 3.5460705757141113, 2.565171957015991, 0.14990000426769257, 0.1499, 0.14218424381404846, '01:41']
[1, 3.3032054901123047, 2.2739975452423096, 0.23669999837875366, 0.23670000000000005, 0.22117317436704678, '01:02']
[2, 3.079195261001587, 2.121152639389038, 0.2881999909877777, 0.2882, 0.27747453853004506, '01:02']
[3, 2.8729519844055176, 2.0858237743377686, 0.3046000003814697, 0.30460000000000004, 0.2935139060898532, '01:03']
[4, 2.699002265930176, 1.9717339277267456, 0.3301999866962433, 0.3302, 0.3208094478874187, '01:03']
[5, 2.505222797393799, 1.9405055046081543, 0.3336000144481659, 0.3336, 0.3147983233860563, '01:03']
[6, 2.3269224166870117, 1.830142617225647, 0.3544999957084656, 0.3545, 0.342584639633196, '01:02']
[7, 2.1910808086395264, 1.8241064548492432, 0.3580999970436096, 0.3581, 0.3472079908205223, '01:03']
[8, 2.108675003051758, 1.810367226600647, 0.373199999332428, 0.37320000000000003, 0.35860055175595185, '01:02']
[9, 2.045077323913574, 1.7705744504928589, 0.38960000872612, 0.3896, 0.38081487224325283, '01:01']
[10, 1.9830338954925537, 1.677762508392334, 0.4101000130176544, 0.4101, 0.4038830161751711, '01:02']
[11, 1.9052953720092773, 1.6932951211929321, 0.4104999899864197, 0.41050000000000003, 0.3991983027623206, '01:03']
[12, 1.8725627660751343, 1.6439025402069092, 0.4275999963283539, 0.4276, 0.4178666261980967, '01:02']
[13, 1.8300261497497559, 1.5979384183883667, 0.4253999888896942, 0.42540000000000006, 0.4165316016237714, '01:00']
[14, 1.7669425010681152, 1.57449471950531, 0.4424999952316284, 0.4425, 0.43806734379539164, '01:02']
[15, 1.7182673215866089, 1.5469014644622803, 0.44929999113082886, 0.4492999999999999, 0.4435563570631137, '01:02']
[16, 1.6641019582748413, 1.5285998582839966, 0.4627000093460083, 0.4627, 0.45528682816110655, '01:02']
[17, 1.6316324472427368, 1.527886986732483, 0.4625999927520752, 0.46259999999999996, 0.4567586949412911, '01:01']
[18, 1.597464919090271, 1.4925177097320557, 0.4747999906539917, 0.47479999999999994, 0.4686867663850355, '01:02']
[19, 1.5703717470169067, 1.4793784618377686, 0.47769999504089355, 0.4777, 0.4721747418589821, '01:02']
[20, 1.5440752506256104, 1.4696024656295776, 0.48330000042915344, 0.4833, 0.4747009732642341, '01:02']
[21, 1.508224368095398, 1.4570105075836182, 0.48739999532699585, 0.48740000000000006, 0.47844687138458886, '01:01']
[22, 1.4792882204055786, 1.4442729949951172, 0.49399998784065247, 0.49400000000000005, 0.48835329768540336, '01:03']
[23, 1.4535472393035889, 1.440007209777832, 0.492000013589859, 0.492, 0.4839648134464139, '01:01']
[24, 1.456434965133667, 1.438212275505066, 0.49779999256134033, 0.49779999999999996, 0.49099502445397436, '01:02']
[25, 1.4440847635269165, 1.4317458868026733, 0.5009999871253967, 0.501, 0.4930410329773697, '01:00']
[26, 1.4079455137252808, 1.4315688610076904, 0.4952999949455261, 0.4953, 0.4876236963831717, '01:01']
[27, 1.4103648662567139, 1.4324716329574585, 0.49889999628067017, 0.4989, 0.49063931220291723, '01:02']
[28, 1.419057846069336, 1.4356880187988281, 0.4993000030517578, 0.4993, 0.49102878464225963, '01:04']
[29, 1.3994516134262085, 1.4352095127105713, 0.4991999864578247, 0.4992, 0.4913084744755659, '01:02']

Tiempo de entrenamiento: 1914.80 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 1.4352
Accuracy (valid): 0.4992
Recall (valid): 0.4992
F1-Score (valid): 0.4913
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 1.4437
Accuracy (test): 0.4975
Recall (test): 0.4975
F1-Score (test): 0.4891
---------------------------------------------------------------------------
Ejecutando: cifar_20pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 8000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 3.4516282081604004, 2.421762228012085, 0.19189999997615814, 0.1919, 0.1804300672203603, '02:12']
[1, 3.044959783554077, 2.1097397804260254, 0.28459998965263367, 0.2846, 0.27462444518176976, '01:25']
[2, 2.7794854640960693, 2.021211624145508, 0.32600000500679016, 0.326, 0.315200475806792, '01:23']
[3, 2.4976415634155273, 1.9278048276901245, 0.3416999876499176, 0.3417, 0.3367729526167004, '01:23']
[4, 2.292634963989258, 1.8279988765716553, 0.3634999990463257, 0.3635, 0.35662928617039613, '01:23']
[5, 2.097489833831787, 1.7834701538085938, 0.37940001487731934, 0.3794, 0.36933303596515304, '01:22']
[6, 1.950994849205017, 1.7017916440963745, 0.40880000591278076, 0.40879999999999994, 0.3978639191250809, '01:23']
[7, 1.8854740858078003, 1.5947786569595337, 0.4318000078201294, 0.4318000000000001, 0.4202840374608872, '01:24']
[8, 1.7825305461883545, 1.5790477991104126, 0.4422999918460846, 0.4423, 0.4351656671328289, '01:23']
[9, 1.7033054828643799, 1.4999949932098389, 0.47450000047683716, 0.47450000000000003, 0.46456754847908766, '01:24']
[10, 1.617582082748413, 1.4537898302078247, 0.4885999858379364, 0.4885999999999999, 0.4825681154195983, '01:24']
[11, 1.5427134037017822, 1.4100558757781982, 0.5020999908447266, 0.5021000000000001, 0.4942507849242189, '01:24']
[12, 1.4667494297027588, 1.3777048587799072, 0.5178999900817871, 0.5179, 0.5100867303017523, '01:24']
[13, 1.4126850366592407, 1.342849850654602, 0.5242999792098999, 0.5243, 0.5194352663173172, '01:25']
[14, 1.3759313821792603, 1.3097153902053833, 0.544700026512146, 0.5447, 0.5399181877879263, '01:24']
[15, 1.3364533185958862, 1.2687745094299316, 0.5566999912261963, 0.5567, 0.5505784607535176, '01:24']
[16, 1.271399736404419, 1.2578402757644653, 0.5623000264167786, 0.5623, 0.5583696756767963, '01:24']
[17, 1.2605544328689575, 1.233367919921875, 0.5740000009536743, 0.5740000000000001, 0.5717548916707601, '01:25']
[18, 1.2147541046142578, 1.217498540878296, 0.5806000232696533, 0.5806, 0.5771627089750483, '01:25']
[19, 1.1818578243255615, 1.2140986919403076, 0.5789999961853027, 0.579, 0.5730797031800743, '01:27']
[20, 1.1458481550216675, 1.206015706062317, 0.583299994468689, 0.5833, 0.5788553257669491, '01:25']
[21, 1.1424661874771118, 1.1953455209732056, 0.5860000252723694, 0.586, 0.5804011377812818, '01:23']
[22, 1.1203842163085938, 1.1881169080734253, 0.5898000001907349, 0.5897999999999999, 0.5852832869761289, '01:24']
[23, 1.1135571002960205, 1.1808322668075562, 0.589900016784668, 0.5899, 0.5862566957879487, '01:25']
[24, 1.0950562953948975, 1.1809402704238892, 0.5914999842643738, 0.5915, 0.5877445294556951, '01:25']
[25, 1.0699626207351685, 1.1751435995101929, 0.5960000157356262, 0.5959999999999999, 0.5923451135787688, '01:25']
[26, 1.069834589958191, 1.1717009544372559, 0.5963000059127808, 0.5963, 0.5926007251353047, '01:25']
[27, 1.0600409507751465, 1.1725932359695435, 0.5947999954223633, 0.5948, 0.5903976071163922, '01:24']
[28, 1.053760290145874, 1.1728804111480713, 0.5942999720573425, 0.5942999999999999, 0.591248336840962, '01:25']
[29, 1.0492660999298096, 1.176492691040039, 0.5921000242233276, 0.5921000000000001, 0.587191801757425, '01:27']

Tiempo de entrenamiento: 2589.62 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 1.1765
Accuracy (valid): 0.5921
Recall (valid): 0.5921
F1-Score (valid): 0.5872
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 1.1837
Accuracy (test): 0.5887
Recall (test): 0.5887
F1-Score (test): 0.5828
---------------------------------------------------------------------------
Ejecutando: cifar_30pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 12000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 3.2727365493774414, 2.258566379547119, 0.23260000348091125, 0.2326, 0.22118390416791506, '02:56']
[1, 2.8339686393737793, 2.034860849380493, 0.3077999949455261, 0.30779999999999996, 0.2931526716209825, '01:49']
[2, 2.552943706512451, 1.9431748390197754, 0.3418000042438507, 0.3418, 0.33055854560573533, '01:50']
[3, 2.32222580909729, 1.8207814693450928, 0.3621000051498413, 0.3621, 0.35400180269059106, '01:47']
[4, 2.073805093765259, 1.706316590309143, 0.39969998598098755, 0.3997, 0.39243796722718843, '01:48']
[5, 1.9096046686172485, 1.663375973701477, 0.4115999937057495, 0.4116000000000001, 0.3959817293513397, '01:49']
[6, 1.8182719945907593, 1.539802074432373, 0.4519999921321869, 0.45199999999999996, 0.44607303653757613, '01:49']
[7, 1.713996171951294, 1.4860528707504272, 0.47369998693466187, 0.4737, 0.4657421998987686, '01:48']
[8, 1.6181825399398804, 1.4074147939682007, 0.5023999810218811, 0.5024, 0.49248344222609236, '01:51']
[9, 1.5336540937423706, 1.3563817739486694, 0.5149999856948853, 0.515, 0.5048234819164777, '01:48']
[10, 1.4385128021240234, 1.2771941423416138, 0.5478000044822693, 0.5477999999999998, 0.5427766871541169, '01:49']
[11, 1.3628178834915161, 1.2518105506896973, 0.5558000206947327, 0.5558, 0.5455968842406773, '01:46']
[12, 1.302831768989563, 1.1949445009231567, 0.5781000256538391, 0.5781000000000001, 0.5727029445887868, '01:45']
[13, 1.2559727430343628, 1.165431261062622, 0.5910999774932861, 0.5911, 0.5868652779604182, '01:45']
[14, 1.2030394077301025, 1.1333073377609253, 0.5946000218391418, 0.5945999999999999, 0.5909364076234366, '01:45']
[15, 1.1749998331069946, 1.1281681060791016, 0.6026999950408936, 0.6026999999999999, 0.5976432877192254, '01:46']
[16, 1.1392642259597778, 1.1006709337234497, 0.6129999756813049, 0.613, 0.6108838583639602, '01:46']
[17, 1.0964961051940918, 1.0881307125091553, 0.6186000108718872, 0.6186, 0.6141913644141027, '01:47']
[18, 1.063764214515686, 1.0779448747634888, 0.6218000054359436, 0.6218, 0.618413293939514, '01:45']
[19, 1.0448285341262817, 1.0719391107559204, 0.6248000264167786, 0.6248, 0.620843918838486, '01:47']
[20, 1.0348198413848877, 1.0596979856491089, 0.6310999989509583, 0.6311, 0.6279181413144075, '01:48']
[21, 1.0122096538543701, 1.0586034059524536, 0.6291999816894531, 0.6292, 0.6251977158081707, '01:46']
[22, 0.9767017960548401, 1.0539674758911133, 0.6294000148773193, 0.6294000000000001, 0.6259221938554269, '01:48']
[23, 0.9585726261138916, 1.0531208515167236, 0.6327999830245972, 0.6328000000000001, 0.6296349933205432, '01:47']
[24, 0.9429320693016052, 1.0555905103683472, 0.6345000267028809, 0.6345, 0.6302165241646216, '01:48']
[25, 0.9314541816711426, 1.0478938817977905, 0.6367999911308289, 0.6368, 0.6335428466557915, '01:48']
[26, 0.9167052507400513, 1.0502560138702393, 0.6340000033378601, 0.634, 0.6303983627731208, '01:48']
[27, 0.9344193339347839, 1.0441724061965942, 0.6353999972343445, 0.6354000000000001, 0.6321750631892165, '01:48']
[28, 0.927534282207489, 1.0493202209472656, 0.6351000070571899, 0.6351, 0.6316750820639176, '01:46']
[29, 0.9324389100074768, 1.0468186140060425, 0.6378999948501587, 0.6379, 0.634621704182613, '01:49']

Tiempo de entrenamiento: 3306.54 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 1.0468
Accuracy (valid): 0.6379
Recall (valid): 0.6379
F1-Score (valid): 0.6346
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 1.0650
Accuracy (test): 0.6309
Recall (test): 0.6308
F1-Score (test): 0.6271
---------------------------------------------------------------------------
Ejecutando: cifar_40pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 16000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 3.174246072769165, 2.2292115688323975, 0.25029999017715454, 0.2503, 0.24183938925934526, '03:01']
[1, 2.8168327808380127, 2.0148251056671143, 0.3111000061035156, 0.31110000000000004, 0.30161112529605066, '02:07']
[2, 2.472182512283325, 1.9078220129013062, 0.3359000086784363, 0.3359, 0.33134499693851877, '02:08']
[3, 2.2018051147460938, 1.7744810581207275, 0.37290000915527344, 0.3729, 0.357454408224105, '02:08']
[4, 1.9421957731246948, 1.6569466590881348, 0.4115999937057495, 0.41159999999999997, 0.40061880591122767, '02:08']
[5, 1.8343662023544312, 1.5628728866577148, 0.44510000944137573, 0.44509999999999994, 0.4412081165180501, '02:08']
[6, 1.6590380668640137, 1.4568980932235718, 0.47679999470710754, 0.47680000000000006, 0.469039594731851, '02:09']
[7, 1.5224517583847046, 1.3871493339538574, 0.5013999938964844, 0.5014, 0.48683578773547626, '02:08']
[8, 1.453227162361145, 1.311710000038147, 0.531499981880188, 0.5315, 0.5279229119267674, '02:10']
[9, 1.3461350202560425, 1.2369036674499512, 0.559499979019165, 0.5595, 0.5547258920953855, '02:07']
[10, 1.3053127527236938, 1.1820648908615112, 0.5824000239372253, 0.5824, 0.5790332954692512, '02:11']
[11, 1.2219423055648804, 1.1441066265106201, 0.5929999947547913, 0.593, 0.590618691912905, '02:08']
[12, 1.1878823041915894, 1.110022783279419, 0.6075999736785889, 0.6076, 0.606401639171468, '02:08']
[13, 1.140456199645996, 1.0916597843170166, 0.614799976348877, 0.6148, 0.6131142712718737, '02:11']
[14, 1.1174309253692627, 1.0682322978973389, 0.621999979019165, 0.6219999999999999, 0.6192943017350769, '02:10']
[15, 1.0783919095993042, 1.0562883615493774, 0.6294999718666077, 0.6295, 0.6279144039195984, '02:09']
[16, 1.0447564125061035, 1.0352628231048584, 0.6388999819755554, 0.6389, 0.6367972092359409, '02:07']
[17, 0.990778923034668, 1.0345104932785034, 0.6376000046730042, 0.6376000000000001, 0.6351779306777281, '02:07']
[18, 0.9901273250579834, 1.0261471271514893, 0.6452999711036682, 0.6453, 0.6426445260019128, '02:08']
[19, 0.9873058795928955, 1.017634391784668, 0.6455000042915344, 0.6455, 0.6422755061406991, '02:11']
[20, 0.9712561964988708, 1.0118496417999268, 0.6474000215530396, 0.6474, 0.6456477453688751, '02:10']
[21, 0.9287648797035217, 1.0044504404067993, 0.6481000185012817, 0.6481, 0.6457811030223654, '02:11']
[22, 0.9140615463256836, 1.003000020980835, 0.6503000259399414, 0.6503, 0.6484294157761756, '02:09']
[23, 0.9135211110115051, 0.9997196197509766, 0.6535999774932861, 0.6535999999999998, 0.6518241534259553, '02:12']
[24, 0.8775733113288879, 0.9980134963989258, 0.6527000069618225, 0.6527000000000001, 0.6506365734083495, '02:11']
[25, 0.889427661895752, 0.9995710253715515, 0.6534000039100647, 0.6534000000000001, 0.6514244744893211, '02:09']
[26, 0.8831120729446411, 1.0029367208480835, 0.6545000076293945, 0.6545, 0.6522113831835029, '02:11']
[27, 0.8657152056694031, 0.9966510534286499, 0.6557999849319458, 0.6557999999999999, 0.6539011794146773, '02:11']
[28, 0.8770155310630798, 0.9948219656944275, 0.6545000076293945, 0.6545, 0.6527747112188809, '02:13']
[29, 0.8741564154624939, 1.0015313625335693, 0.6532999873161316, 0.6533, 0.6512203447642056, '02:10']

Tiempo de entrenamiento: 3948.51 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 1.0015
Accuracy (valid): 0.6533
Recall (valid): 0.6533
F1-Score (valid): 0.6512
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 1.0093
Accuracy (test): 0.6547
Recall (test): 0.6547
F1-Score (test): 0.6516
---------------------------------------------------------------------------
Ejecutando: cifar_50pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 20000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 3.0523738861083984, 2.1606104373931885, 0.2623000144958496, 0.26230000000000003, 0.24973124456544235, '03:21']
[1, 2.7329368591308594, 1.9454740285873413, 0.32330000400543213, 0.32330000000000003, 0.31446501961674983, '02:29']
[2, 2.3905909061431885, 1.8315545320510864, 0.3587000072002411, 0.35869999999999996, 0.3444120171792233, '02:27']
[3, 2.101153612136841, 1.7238738536834717, 0.39640000462532043, 0.3964, 0.3884816633048856, '02:28']
[4, 1.8994160890579224, 1.61927330493927, 0.4311000108718872, 0.4311, 0.4268179542109502, '02:26']
[5, 1.7347652912139893, 1.487355351448059, 0.47769999504089355, 0.4777, 0.4701220082476931, '02:27']
[6, 1.5696625709533691, 1.3657463788986206, 0.5202000141143799, 0.5202, 0.51388900152207, '02:28']
[7, 1.4153255224227905, 1.2867425680160522, 0.5397999882698059, 0.5398000000000001, 0.5311491455415117, '02:27']
[8, 1.3385114669799805, 1.207411766052246, 0.5795999765396118, 0.5795999999999999, 0.5773701794532109, '02:28']
[9, 1.2421938180923462, 1.1494197845458984, 0.5986999869346619, 0.5987000000000001, 0.5944310496722767, '02:28']
[10, 1.1963863372802734, 1.117588996887207, 0.609499990940094, 0.6094999999999999, 0.604566705497029, '02:31']
[11, 1.1420691013336182, 1.071321964263916, 0.6226999759674072, 0.6226999999999999, 0.6193535115790391, '02:31']
[12, 1.0887713432312012, 1.0522664785385132, 0.6305999755859375, 0.6305999999999999, 0.6269283153323978, '02:31']
[13, 1.0747915506362915, 1.0276756286621094, 0.6412000060081482, 0.6412000000000001, 0.6405870096493789, '02:31']
[14, 1.0407111644744873, 1.018257737159729, 0.6467000246047974, 0.6467, 0.6456811589462296, '02:31']
[15, 1.0058263540267944, 1.0014011859893799, 0.6514999866485596, 0.6515, 0.6482149845746534, '02:37']
[16, 1.0103892087936401, 0.9924353361129761, 0.6528000235557556, 0.6528, 0.6505514229316922, '02:31']
[17, 0.96905916929245, 0.9846025109291077, 0.6581000089645386, 0.6581, 0.6555806273903301, '02:32']
[18, 0.9386393427848816, 0.9798487424850464, 0.6601999998092651, 0.6602, 0.657228433388689, '02:31']
[19, 0.9249100685119629, 0.978412389755249, 0.6625999808311462, 0.6626, 0.659339501528412, '02:30']
[20, 0.9006450176239014, 0.9736384749412537, 0.6636000275611877, 0.6636, 0.6608535052745896, '02:32']
[21, 0.8884438872337341, 0.9655555486679077, 0.6668000221252441, 0.6668000000000001, 0.663932427984171, '02:32']
[22, 0.8851106762886047, 0.9650217890739441, 0.6650999784469604, 0.6651, 0.6636352286395233, '02:31']
[23, 0.8502581715583801, 0.9622161388397217, 0.667900025844574, 0.6678999999999999, 0.6657569888453579, '02:33']
[24, 0.8560189008712769, 0.9623615145683289, 0.6678000092506409, 0.6678, 0.6655278983951657, '02:31']
[25, 0.8257078528404236, 0.9575332999229431, 0.6700000166893005, 0.6699999999999999, 0.6680447278668667, '02:30']
[26, 0.8145170211791992, 0.9597859382629395, 0.6687999963760376, 0.6688, 0.6661856439435663, '02:30']
[27, 0.8357775211334229, 0.9632949233055115, 0.6690000295639038, 0.669, 0.6661319144393554, '02:27']
[28, 0.8466899394989014, 0.9595757126808167, 0.6696000099182129, 0.6696, 0.6667974358526807, '02:30']
[29, 0.8325323462486267, 0.9621051549911499, 0.6682000160217285, 0.6681999999999999, 0.6659796332876191, '02:29']

Tiempo de entrenamiento: 4565.83 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 0.9621
Accuracy (valid): 0.6682
Recall (valid): 0.6682
F1-Score (valid): 0.6660
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 0.9714
Accuracy (test): 0.6675
Recall (test): 0.6675
F1-Score (test): 0.6650
---------------------------------------------------------------------------
Ejecutando: cifar_60pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 24000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 2.949127674102783, 2.118072271347046, 0.2800000011920929, 0.27999999999999997, 0.2699627851423205, '03:42']
[1, 2.6147875785827637, 1.91618013381958, 0.3305000066757202, 0.3305, 0.32279607023470563, '02:48']
[2, 2.225332021713257, 1.7719839811325073, 0.3659000098705292, 0.3659, 0.36069810580701267, '02:49']
[3, 1.9988263845443726, 1.6975840330123901, 0.4016999900341034, 0.40170000000000006, 0.39067404624276386, '02:49']
[4, 1.821341872215271, 1.5407015085220337, 0.45159998536109924, 0.4516, 0.4342883409841726, '02:52']
[5, 1.6414328813552856, 1.4346740245819092, 0.4909999966621399, 0.491, 0.4814850827960372, '02:54']
[6, 1.4452663660049438, 1.277649164199829, 0.5511000156402588, 0.5511000000000001, 0.5498202186984164, '02:54']
[7, 1.3460558652877808, 1.193629503250122, 0.5769000053405762, 0.5769, 0.572464419350396, '02:56']
[8, 1.2553077936172485, 1.1313737630844116, 0.5960000157356262, 0.596, 0.5915375765976625, '02:56']
[9, 1.1757935285568237, 1.072007179260254, 0.6223999857902527, 0.6224000000000001, 0.6185816576969497, '02:55']
[10, 1.1386386156082153, 1.0341764688491821, 0.640999972820282, 0.641, 0.6400723848756846, '02:56']
[11, 1.0915930271148682, 1.0153093338012695, 0.642300009727478, 0.6423, 0.6387090422370492, '02:57']
[12, 1.0828810930252075, 0.9883362054824829, 0.656000018119812, 0.6559999999999999, 0.6540481484762571, '02:56']
[13, 1.0158849954605103, 0.9687787294387817, 0.6657999753952026, 0.6658000000000001, 0.6637817912691208, '02:54']
[14, 1.018739104270935, 0.9584794044494629, 0.6632999777793884, 0.6632999999999999, 0.661546459039851, '02:53']
[15, 0.9936405420303345, 0.9458648562431335, 0.670199990272522, 0.6702, 0.6683344397534623, '02:53']
[16, 0.971100926399231, 0.9420343041419983, 0.6711000204086304, 0.6711, 0.6697748513688992, '02:50']
[17, 0.8952831625938416, 0.9395818114280701, 0.6762999892234802, 0.6763, 0.6757761888423423, '02:49']
[18, 0.9059246778488159, 0.9369555711746216, 0.6776000261306763, 0.6776, 0.6762299795012187, '02:48']
[19, 0.8899319171905518, 0.9317206144332886, 0.6793000102043152, 0.6793, 0.6770790274881039, '02:49']
[20, 0.8707016110420227, 0.9207990169525146, 0.6847000122070312, 0.6847000000000001, 0.6831838263630599, '02:48']
[21, 0.8641719222068787, 0.9201803803443909, 0.6844000220298767, 0.6844, 0.6825077968262031, '02:47']
[22, 0.8497158288955688, 0.9213809370994568, 0.6848999857902527, 0.6849000000000001, 0.6825167657528153, '02:48']
[23, 0.7956452965736389, 0.9137763381004333, 0.6847000122070312, 0.6847, 0.683601084084683, '02:48']
[24, 0.8170578479766846, 0.9173496961593628, 0.6875, 0.6875000000000001, 0.6860312279270605, '02:49']
[25, 0.7996607422828674, 0.9178999066352844, 0.6866000294685364, 0.6866, 0.6846524423103799, '02:49']
[26, 0.8129813075065613, 0.9144315719604492, 0.6880000233650208, 0.688, 0.6861581246577069, '02:48']
[27, 0.7918709516525269, 0.9147022366523743, 0.6894000172615051, 0.6894, 0.6877322044367485, '02:48']
[28, 0.8252556920051575, 0.9119638800621033, 0.6876999735832214, 0.6877, 0.6870452875373938, '02:48']
[29, 0.8041375279426575, 0.9178975820541382, 0.6862000226974487, 0.6861999999999999, 0.6839366513588993, '02:45']

Tiempo de entrenamiento: 5193.75 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 0.9179
Accuracy (valid): 0.6862
Recall (valid): 0.6862
F1-Score (valid): 0.6839
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 0.9411
Accuracy (test): 0.6751
Recall (test): 0.6751
F1-Score (test): 0.6724
---------------------------------------------------------------------------
Ejecutando: cifar_70pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 28000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 2.913393497467041, 2.0859670639038086, 0.2906000018119812, 0.29059999999999997, 0.27753677321300346, '04:10']
[1, 2.510502338409424, 1.8852206468582153, 0.35019999742507935, 0.3502, 0.33360267482068845, '03:07']
[2, 2.1699442863464355, 1.744074821472168, 0.3804999887943268, 0.38049999999999995, 0.37291167097640443, '03:08']
[3, 1.931668996810913, 1.5930112600326538, 0.43630000948905945, 0.4363, 0.41989720898327487, '03:07']
[4, 1.764830470085144, 1.4890836477279663, 0.4722999930381775, 0.4722999999999999, 0.4635965216115404, '03:08']
[5, 1.57436203956604, 1.356763482093811, 0.5171999931335449, 0.5172000000000001, 0.5112190432251188, '03:08']
[6, 1.4206894636154175, 1.2452400922775269, 0.5582000017166138, 0.5581999999999999, 0.5496789830806033, '03:07']
[7, 1.286308765411377, 1.1391310691833496, 0.5925999879837036, 0.5926, 0.5883455127316632, '03:08']
[8, 1.2343623638153076, 1.0893274545669556, 0.6158000230789185, 0.6157999999999999, 0.611672177701059, '03:08']
[9, 1.1794190406799316, 1.0499887466430664, 0.626800000667572, 0.6268, 0.6256802932353032, '03:08']
[10, 1.1232671737670898, 1.0097694396972656, 0.6406999826431274, 0.6407, 0.6377426824488557, '03:05']
[11, 1.0774742364883423, 0.9811181426048279, 0.6554999947547913, 0.6555000000000001, 0.6530191299155444, '03:03']
[12, 1.0439293384552002, 0.95803302526474, 0.6633999943733215, 0.6634, 0.6618311786124293, '03:06']
[13, 1.0009514093399048, 0.9493729472160339, 0.6682000160217285, 0.6682, 0.6663075731782144, '03:06']
[14, 0.9838125109672546, 0.9297022223472595, 0.6754000186920166, 0.6754, 0.6727034608604784, '03:05']
[15, 0.9822031259536743, 0.9172248244285583, 0.6769000291824341, 0.6769000000000001, 0.6754089664782257, '03:06']
[16, 0.9479926228523254, 0.9101115465164185, 0.6823999881744385, 0.6824000000000001, 0.6809258958068783, '03:06']
[17, 0.9055237174034119, 0.9092622995376587, 0.6854000091552734, 0.6853999999999999, 0.683908133600289, '03:08']
[18, 0.9033277630805969, 0.9026429653167725, 0.6848000288009644, 0.6848, 0.6817974907643356, '03:06']
[19, 0.8771719336509705, 0.8986250758171082, 0.6887999773025513, 0.6888000000000001, 0.6880927080172088, '03:04']
[20, 0.8587733507156372, 0.9008946418762207, 0.6884999871253967, 0.6885000000000001, 0.6869650997548333, '03:04']
[21, 0.830129861831665, 0.8933762907981873, 0.6930999755859375, 0.6931, 0.6918861453291507, '03:03']
[22, 0.8370394706726074, 0.8851951956748962, 0.6938999891281128, 0.6939, 0.6924321172612864, '03:04']
[23, 0.8339284658432007, 0.8875002861022949, 0.6937999725341797, 0.6938000000000001, 0.692121460238126, '03:02']
[24, 0.8178935050964355, 0.8882628083229065, 0.694599986076355, 0.6946000000000001, 0.6927952882773567, '03:03']
[25, 0.8247308731079102, 0.8861261606216431, 0.6934000253677368, 0.6934, 0.6918209397617348, '03:03']
[26, 0.8010730743408203, 0.8863171935081482, 0.6947000026702881, 0.6947, 0.6933597143089589, '03:03']
[27, 0.8033798933029175, 0.8823835253715515, 0.6962000131607056, 0.6961999999999999, 0.6955541877657401, '03:05']
[28, 0.8007566928863525, 0.8861300945281982, 0.6940000057220459, 0.6940000000000002, 0.692196216357008, '03:03']
[29, 0.797671914100647, 0.8832237124443054, 0.6949999928474426, 0.695, 0.6936235026102515, '03:04']

Tiempo de entrenamiento: 5646.34 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 0.8832
Accuracy (valid): 0.6950
Recall (valid): 0.6950
F1-Score (valid): 0.6936
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 0.9108
Accuracy (test): 0.6880
Recall (test): 0.6880
F1-Score (test): 0.6859
---------------------------------------------------------------------------
Ejecutando: cifar_80pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 32000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 2.8934285640716553, 2.029404878616333, 0.30329999327659607, 0.3033, 0.28886410505904814, '04:38']
[1, 2.486851453781128, 1.8532332181930542, 0.361299991607666, 0.3613, 0.3532851320988345, '03:31']
[2, 2.091036796569824, 1.7203819751739502, 0.3928000032901764, 0.39280000000000004, 0.3816138364712395, '03:28']
[3, 1.8831144571304321, 1.599307656288147, 0.43799999356269836, 0.438, 0.42744948522993303, '03:27']
[4, 1.6813920736312866, 1.4572135210037231, 0.49630001187324524, 0.4963, 0.4935272354834196, '03:26']
[5, 1.4798762798309326, 1.3126307725906372, 0.536300003528595, 0.5363, 0.5310363087712562, '03:28']
[6, 1.3642139434814453, 1.1855456829071045, 0.5802000164985657, 0.5802, 0.5720006524047059, '03:23']
[7, 1.228348970413208, 1.1060798168182373, 0.6151000261306763, 0.6151, 0.6101273314949566, '03:24']
[8, 1.1753668785095215, 1.0458476543426514, 0.6335999965667725, 0.6336, 0.6283329385756614, '03:23']
[9, 1.1204522848129272, 1.000968098640442, 0.6535999774932861, 0.6536000000000001, 0.6491037018290905, '03:22']
[10, 1.0864629745483398, 0.9743054509162903, 0.6593000292778015, 0.6593, 0.6568099070914305, '03:23']
[11, 1.0499622821807861, 0.9562578201293945, 0.6729999780654907, 0.673, 0.6713077251475891, '03:21']
[12, 1.0058507919311523, 0.9338914752006531, 0.675000011920929, 0.675, 0.6711992892687497, '03:23']
[13, 0.9912925958633423, 0.9198015332221985, 0.6819000244140625, 0.6819000000000001, 0.6804911175767582, '03:23']
[14, 0.9434908628463745, 0.9101750254631042, 0.6865000128746033, 0.6865, 0.6842158982180931, '03:24']
[15, 0.9508581161499023, 0.8985835909843445, 0.6901999711990356, 0.6902, 0.6884106814586185, '03:24']
[16, 0.9090165495872498, 0.8941755890846252, 0.6938999891281128, 0.6939000000000001, 0.691308055638204, '03:24']
[17, 0.892122745513916, 0.8909243941307068, 0.6934999823570251, 0.6935, 0.6926280907364643, '03:25']
[18, 0.8949332237243652, 0.8798673748970032, 0.6987000107765198, 0.6987, 0.6975540553228508, '03:24']
[19, 0.8849244713783264, 0.8808149695396423, 0.6998999714851379, 0.6999, 0.6978341254885372, '03:24']
[20, 0.8441723585128784, 0.882286012172699, 0.7005000114440918, 0.7005000000000001, 0.6980636205881807, '03:25']
[21, 0.8330278992652893, 0.86956787109375, 0.7045999765396118, 0.7045999999999999, 0.703533937298072, '03:24']
[22, 0.8351448178291321, 0.8692466020584106, 0.7021999955177307, 0.7022, 0.7006309070739574, '03:22']
[23, 0.8144794702529907, 0.867986798286438, 0.7045999765396118, 0.7046, 0.7036113041192155, '03:22']
[24, 0.8175158500671387, 0.8666902184486389, 0.704200029373169, 0.7041999999999999, 0.7033090713704765, '03:19']
[25, 0.7832130193710327, 0.8677088618278503, 0.703499972820282, 0.7034999999999999, 0.7024279173479807, '03:23']
[26, 0.8048677444458008, 0.8665575385093689, 0.704200029373169, 0.7041999999999999, 0.7027011056003004, '03:23']
[27, 0.8025956749916077, 0.8673405051231384, 0.7049999833106995, 0.705, 0.7033375175784508, '03:23']
[28, 0.7752146124839783, 0.8699272274971008, 0.7081000208854675, 0.7081000000000002, 0.7064785603125129, '03:23']
[29, 0.7770972847938538, 0.8640624284744263, 0.7056000232696533, 0.7056, 0.7046025601894389, '03:21']

Tiempo de entrenamiento: 6207.62 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 0.8641
Accuracy (valid): 0.7056
Recall (valid): 0.7056
F1-Score (valid): 0.7046
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=EfficientNet_V2_S_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_V2_S_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loss (test): 0.8936
Accuracy (test): 0.6921
Recall (test): 0.6921
F1-Score (test): 0.6906
---------------------------------------------------------------------------
Ejecutando: cifar_90pct_effnetv2s_quant
---------------------------------------------------------------------------
False
Número total de imágenes en entrenamiento: 36000
Número total de imágenes en validación: 10000
Clases: ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
weights = None
[0, 2.8471152782440186, 2.0502593517303467, 0.2996000051498413, 0.2996, 0.2904714845979062, '05:58']
[1, 2.395632743835449, 1.832793951034546, 0.3594000041484833, 0.35940000000000005, 0.3440407490268148, '03:47']
[2, 2.0550103187561035, 1.7180529832839966, 0.3961000144481659, 0.3961, 0.39228525634874545, '03:42']
[3, 1.81955087184906, 1.5959575176239014, 0.43320000171661377, 0.4332, 0.42670237322379884, '03:44']
[4, 1.60291588306427, 1.426531434059143, 0.49720001220703125, 0.4972, 0.48811713101119086, '03:43']
[5, 1.4267834424972534, 1.2518647909164429, 0.5602999925613403, 0.5603, 0.5546310555220713, '03:42']
[6, 1.2905950546264648, 1.1558574438095093, 0.593500018119812, 0.5935, 0.5910416588118517, '03:45']
[7, 1.2011067867279053, 1.0774407386779785, 0.6230999827384949, 0.6231, 0.6189594220168972, '03:44']
[8, 1.1233327388763428, 1.0216121673583984, 0.6467000246047974, 0.6467, 0.6447096173409941, '03:43']
[9, 1.0819083452224731, 0.9777839779853821, 0.6608999967575073, 0.6609, 0.6585103832520197, '03:43']
[10, 1.056113600730896, 0.9690945148468018, 0.6662999987602234, 0.6663, 0.6637022196384733, '03:44']
[11, 1.0097466707229614, 0.9412439465522766, 0.6784999966621399, 0.6784999999999999, 0.6757032918499697, '03:44']
[12, 0.9586647748947144, 0.9284235239028931, 0.6796000003814697, 0.6796, 0.6776699715198229, '03:44']
[13, 0.9575675129890442, 0.9110289812088013, 0.6869999766349792, 0.687, 0.6833044785080631, '03:44']
[14, 0.9361862540245056, 0.8967823386192322, 0.6919999718666077, 0.6920000000000001, 0.689899226182075, '03:44']
[15, 0.9090133309364319, 0.8997825980186462, 0.691100001335144, 0.6910999999999999, 0.6880268125708334, '03:44']
[16, 0.9004531502723694, 0.8886184692382812, 0.6934000253677368, 0.6934, 0.6916190975438672, '03:44']
[17, 0.8681108355522156, 0.8774542808532715, 0.6977999806404114, 0.6978, 0.6957602620941937, '03:44']
[18, 0.8640499711036682, 0.8794268369674683, 0.6970999836921692, 0.6971, 0.6950177835010785, '03:46']
[19, 0.8634762167930603, 0.870970606803894, 0.7001000046730042, 0.7001000000000001, 0.6990190429684151, '03:49']
[20, 0.8194217085838318, 0.8734161257743835, 0.7021999955177307, 0.7022, 0.6990817980120476, '03:47']
[21, 0.8056685924530029, 0.8724149465560913, 0.703000009059906, 0.703, 0.6990369637959093, '03:49']
[22, 0.8085259199142456, 0.8642042279243469, 0.7078999876976013, 0.7079000000000001, 0.7056845267591784, '03:49']
[23, 0.804439902305603, 0.863745927810669, 0.7045000195503235, 0.7045000000000001, 0.7021393789962633, '03:46']
[24, 0.7866225838661194, 0.8610925674438477, 0.7059000134468079, 0.7059, 0.7041195994107843, '03:45']
[25, 0.7861859202384949, 0.865577220916748, 0.7062000036239624, 0.7061999999999999, 0.7039195737416055, '03:44']
[26, 0.786102831363678, 0.8631361126899719, 0.7073000073432922, 0.7073000000000002, 0.705343824506979, '03:44']
[27, 0.7616249918937683, 0.8591970801353455, 0.7064999938011169, 0.7064999999999999, 0.7045037267203409, '03:44']
[28, 0.773145854473114, 0.8652740120887756, 0.7049000263214111, 0.7049000000000001, 0.7022805481762001, '03:44']
[29, 0.7524609565734863, 0.8628886938095093, 0.7069000005722046, 0.7069, 0.7044123613415053, '03:51']

Tiempo de entrenamiento: 6895.08 segundos
/mnt/homeGPU/haoweihu/TFG/lib/python3.10/site-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.
If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.
  warn("load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.")
Loss (valid): 0.8629
Accuracy (valid): 0.7069
Recall (valid): 0.7069
F1-Score (valid): 0.7044
Loss (test): 0.8814
Accuracy (test): 0.6997
Recall (test): 0.6997
F1-Score (test): 0.6971
mail: cannot send message: Process exited with a non-zero status
